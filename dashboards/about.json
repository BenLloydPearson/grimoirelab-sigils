{"index_patterns": [], "visualizations": [{"value": {"kibanaSavedObjectMeta": {"searchSourceJSON": "{\"query\":{\"query_string\":{\"query\":\"*\",\"analyze_wildcard\":true}},\"filter\":[]}"}, "visState": "{\"title\":\"Help About\",\"type\":\"markdown\",\"params\":{\"markdown\":\"# About the Eclipse dashboard\\n\\nThe Bitergia Analytics dashboard for Eclipse is based on information retrieved from publicly available data sources: Git repositories, Bugzilla, Gerrit, and mailing lists archives.\\n\\nAll the software used to retrieve, store, analyze and visualize data from repositories is done with free, open source software. The key part of it is [GrimoireLab](https://github.com/grimoirelab), the software development analytics toolset. Although [Bitergia](https://www.bitergia.com/) is the lead developer of GrimoireLab, we intend the project to work as a community, and your contributions are welcome.\\n\\nOther key pieces used to produce dashboards are Python (most of the retrieval and analytics software we use is written in Python), ElasticSearch (for data storage) and Kibana (for visualization we use Kibitter, our own fork of Kibana, which we intend to contribute back upstream).\\n\\nWe take your privacy seriously. All the information provided in the dashboards is based on publicly available data. We have done our best, however, to avoid publishing privacy-related information, such as email addresses, even if publicly available. Please, contact us if you spot some data that could be subject to privacy issues. For more details on the matter, please consult our [Privacy Policy](https://bitergia.com/privacy/).\"},\"aggs\":[],\"listeners\":{}}", "title": "Help About", "description": "", "version": 1, "uiStateJSON": "{}"}, "id": "Help-About"}, {"value": {"kibanaSavedObjectMeta": {"searchSourceJSON": "{\"query\":{\"query_string\":{\"query\":\"*\",\"analyze_wildcard\":true}},\"filter\":[]}"}, "visState": "{\"title\":\"Help Acknowledgments\",\"type\":\"markdown\",\"params\":{\"markdown\":\"# Acknowledgments\\n\\nThanks to all free, open source software developers, who have produced all the software that can be analyzed by this open analytics platform.\\n\\nIn particular, thanks to all of them (ranking in the tens of thousands) who have contributed to the pieces of software who make possible the platform itself.\"},\"aggs\":[],\"listeners\":{}}", "title": "Help Acknowledgments", "description": "", "version": 1, "uiStateJSON": "{}"}, "id": "Help-Acknowledgments"}, {"value": {"kibanaSavedObjectMeta": {"searchSourceJSON": "{\"query\":{\"query_string\":{\"query\":\"*\",\"analyze_wildcard\":true}},\"filter\":[]}"}, "visState": "{\"title\":\"Help Data Sources\",\"type\":\"markdown\",\"params\":{\"markdown\":\"# The panels in the dashboard\\n\\nThe dashboard visualizes data from several data sources and this is organized in several panels, described below.\\n\\n## Overview\\n\\nThe Overview panel shows a summary of the repositories analyzed. Most of the visualizations found in it can be explored in more detail in the panels corresponding to the different analysis: Git, Gerrit, mailing lists and others.\\n\\n## Git\\n\\nThe Git panel shows information about commits in git repositories. For each commit, git stores metainformation about who authored the commit (author), and when, and about who included the commit in the repository (committer), and when. \\n\\nEach author and committer in git are usually identified by a name and an email address. We use the information in the email addresses to find \\\"domains\\\" and as a first approach to enrich the information to obtain organizations information.\\n\\nDates and times (author time, committer time) in git are expressed usually in the time zone of the computer where the person performed the action (creation of the commit, or merging of it in the repository). We use that to display time zone information.\\n\\nGerrit\\n--------\\n\\nThe Gerrit panel shows information about changesets in the code review process, when the projects use it.\\n\\nEach changeset is created by a certain person, is later reviewed and commented. As a result of the review, maybe a new version of the changeset is required, fixing some issues that reviewers find important. This new version of the changeset will be resubmitted, and again reviewed and commnted, until it is eventually accepted (merged) or abanodned. All this process happens in Gerrit. We therefore extract information from Gerrit for tracking the review process. \\n\\nOne of the key parameters when tracking changesets are their time open. For closed changests (abandoned or merged), time open is really time-to-close, the time from the moment they were created to the moment they were closed. For changesets that are still open, time open is the time since creation to the moment when the analysis was performed.\\n\\nThis way, to learn about the time open of currently open changesets, the dashboard can be configured to show only NEW changesets.\\n\\nWhen showing aggregate time open and similar parameters, usually the mean is not a good metric, because the values are very skewed (most of them are relatively short, but a few can be very large). Therefore, in most visualizations we offer medians (maximum time for 50% of the shortest periods), or percentiles (for example, maximum time for 80% or 95% of the shortest periods). This can be interpreted in the following way as well: it t is the time for the 80% percentile, there is 20% of issues with longer time than.\"},\"aggs\":[],\"listeners\":{}}", "title": "Help Data Sources", "description": "", "version": 1, "uiStateJSON": "{}"}, "id": "Help-Data-Sources"}, {"value": {"kibanaSavedObjectMeta": {"searchSourceJSON": "{\"query\":{\"query_string\":{\"query\":\"*\",\"analyze_wildcard\":true}},\"filter\":[]}"}, "visState": "{\"title\":\"Help UI\",\"type\":\"markdown\",\"params\":{\"markdown\":\"# Working with the dashboard\\n\\nThe Dashboard shows information in several panels. Each of these panels include several visualizations. Many elements in the visualizations are actionable. When the user interacts with them, the information in the whole panel (and in some cases in the whole dashboard) is reconfigured, usually by filtering in or out some data.\\n\\n## Date filter\\n\\nOn the top right corner you can find the date filter. It allows you to select the time period which is considered when visualizing the data. Only items in that time period will be shown. So, for example, the total count of commits, or the evolution of issues created over time, correspond only to commits authored (or committed, if specified), or to issues created (or closed, if specified) during that period.\\n\\nDate filters can be defined as well by clicking on bars on time-based charts, or by selecting (clicking and dragging) on a group of them.\\n\\n## Data filters\\n\\nClicking on almost any cell in tables, sector in pies, or bar in bar charts causes a filter to be applied. Filters appear as green boxes on the top left of the dashboard (right below the panels menu). For example, clicking on a developer name causes a filter with that name, which will cause the panel to show only activity of that developer.\\n\\nFilters can be removed (click on the trash icon in the filter itself), negated (click on the minus sign), or disabled (click on the left box within the filter). Filters can also be made \\\"sticky\\\", which means they will be applied all over the dashboard, even if moving to a new panel.\\n\\n## Sharing\\n\\nThe Dashboard, once configured with date filters and data filters, can be shared and bookmarked. Anyone using the shared link or the bookmark will have access to exactly the same view (filters included) that was shown when the link or bookmark was created. For producing the link to share or bookmark, click on the \\\"share\\\" icon, on the top right of the dashboard. Please notice that you an get either \\\"regular\\\" urls (which are long and a bit cumbersome to handle), and \\\"short\\\" urls, which encode the same information but are much easier to deal with.\\n\\n## Kibana\\n\\nThe dashboard is a customized Kibana dashboard. Therefore, some of the information about how to work with Kibana dashboards may be useful. See for example the [Kibana tutorial on dashboards](https://www.elastic.co/guide/en/kibana/4.5/dashboard.html).\"},\"aggs\":[],\"listeners\":{}}", "title": "Help UI", "description": "", "version": 1, "uiStateJSON": "{}"}, "id": "Help-UI"}], "searches": [], "dashboard": {"value": {"optionsJSON": "{\"darkTheme\":false}", "timeRestore": false, "hits": 0, "panelsJSON": "[{\"id\":\"Help-About\",\"type\":\"visualization\",\"panelIndex\":1,\"size_x\":6,\"size_y\":4,\"col\":1,\"row\":1,\"title\":\"About\"},{\"id\":\"Help-Acknowledgments\",\"type\":\"visualization\",\"panelIndex\":2,\"size_x\":6,\"size_y\":3,\"col\":7,\"row\":5,\"title\":\"Acknowledgments\"},{\"id\":\"Help-Data-Sources\",\"type\":\"visualization\",\"panelIndex\":3,\"size_x\":6,\"size_y\":4,\"col\":7,\"row\":1,\"title\":\"Panels and Data Sources\"},{\"id\":\"Help-UI\",\"type\":\"visualization\",\"panelIndex\":4,\"size_x\":6,\"size_y\":3,\"col\":1,\"row\":5,\"title\":\"User Interface\"}]", "title": "About", "uiStateJSON": "{\"P-1\":{\"title\":\"About\"},\"P-3\":{\"title\":\"Panels and Data Sources\"},\"P-2\":{\"title\":\"Acknowledgments\"},\"P-4\":{\"title\":\"User Interface\"}}", "version": 1, "kibanaSavedObjectMeta": {"searchSourceJSON": "{\"filter\":[{\"query\":{\"query_string\":{\"query\":\"*\",\"analyze_wildcard\":true}}}]}"}, "description": ""}, "id": "About"}}